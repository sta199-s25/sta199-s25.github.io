{
  "hash": "cd039fbadad8aa647e9da188a54b1bc3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"AE 03: Gerrymandering + data exploration I\"\nsubtitle: \"Suggested answers\"\n---\n\n\n\n::: callout-important\nThese are suggested answers. This document should be used as a reference only; it's not designed to be an exhaustive key.\n:::\n\n## Getting started\n\n### Packages\n\nWe'll use the **tidyverse** package for this analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(usdata)\n```\n:::\n\n\n\n### Data\n\nThe data are available in the **usdata** package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(gerrymander)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 435\nColumns: 12\n$ district   <chr> \"AK-AL\", \"AL-01\", \"AL-02\", \"AL-03\", \"AL-04\", \"AL-05\", \"AL-0…\n$ last_name  <chr> \"Young\", \"Byrne\", \"Roby\", \"Rogers\", \"Aderholt\", \"Brooks\", \"…\n$ first_name <chr> \"Don\", \"Bradley\", \"Martha\", \"Mike D.\", \"Rob\", \"Mo\", \"Gary\",…\n$ party16    <chr> \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",…\n$ clinton16  <dbl> 37.6, 34.1, 33.0, 32.3, 17.4, 31.3, 26.1, 69.8, 30.2, 41.7,…\n$ trump16    <dbl> 52.8, 63.5, 64.9, 65.3, 80.4, 64.7, 70.8, 28.6, 65.0, 52.4,…\n$ dem16      <dbl> 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,…\n$ state      <chr> \"AK\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AR\", \"AR\",…\n$ party18    <chr> \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",…\n$ dem18      <dbl> 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0,…\n$ flip18     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,…\n$ gerry      <fct> mid, high, high, high, high, high, high, high, mid, mid, mi…\n```\n\n\n:::\n:::\n\n\n\nSince this dataset is shipped with a package, it has documentation that you can access via `?gerrymander`. The `flip18` variable is categorical with three levels:\n\n-   -1: control of the district flipped from Democrats to Republicans between 2016 and 2018;\n-   0: the district did not flip. If Democrats controlled it in 2016, they kept it in 2018. If Republicans controlled it in 2016, they kept it in 2018;\n-   1: control of the district flipped from Republicans to Democrats between 2016 and 2018.\n\n## Districts at the tails\n\nMake side-by-side box plots of percent of vote received by Trump in 2016 Presidential Election by prevalence of gerrymandering. Identify any Congressional Districts that are potential outliers. Are they different from the rest of the Congressional Districts due to high support or low support for Trump in the 2016 Presidential Election? Which state are they in? Which city are they in?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gerrymander, aes(x = trump16, y = gerry)) +\n  geom_boxplot() + \n  labs(\n    x = \"% vote for Trump in 2016\",\n    y = \"Extent of gerrymandering in district\"\n  )\n```\n\n::: {.cell-output-display}\n![](ae-03-gerrymander-explore-I_files/figure-html/outliers-1.png){width=672}\n:::\n:::\n\n\n\nThe outliers are:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  filter(gerry == \"low\" & trump16 < 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 12\n  district last_name first_name party16 clinton16 trump16 dem16 state party18\n  <chr>    <chr>     <chr>      <chr>       <dbl>   <dbl> <dbl> <chr> <chr>  \n1 NY-13    Espaillat Adriano    D            92.3     5.4     1 NY    D      \n2 NY-15    Serrano   Jose       D            93.8     4.9     1 NY    D      \n# ℹ 3 more variables: dem18 <dbl>, flip18 <dbl>, gerry <fct>\n```\n\n\n:::\n:::\n\n\n\n## Flips\n\nIs a Congressional District more likely to have high prevalence of gerrymandering if a Democrat was able to flip the seat in the 2018 election? Support your answer with a visualization as well as summary statistics.\n\n::: callout-tip\n## Hint\n\nCalculate the conditional distribution of prevalance of gerrymandering based on whether a Democrat was able to flip the seat in the 2018 election.\n:::\n\nThis code gives you a bar chart counting how many districts fall into each level of `flip18`, and then divides each bar according to the prevalence of gerrymandering in the districts:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gerrymander, aes(x = flip18, fill = gerry)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](ae-03-gerrymander-explore-I_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nHowever, because the total number of counts is different in the three groups, it's hard to directly compare the information about gerrmandering. So, this code normalizes each bar so that you can compare by eye:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gerrymander, aes(x = flip18, fill = gerry)) +\n  geom_bar(position = \"fill\")\n```\n\n::: {.cell-output-display}\n![](ae-03-gerrymander-explore-I_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\nThis code gives you the raw numbers that underpin the plot:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  count(flip18, gerry) |>\n  group_by(flip18) |>\n  mutate(prop = n / sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 4\n# Groups:   flip18 [3]\n  flip18 gerry     n  prop\n   <dbl> <fct> <int> <dbl>\n1     -1 low       2 0.4  \n2     -1 mid       3 0.6  \n3      0 low      52 0.133\n4      0 mid     242 0.617\n5      0 high     98 0.25 \n6      1 low       8 0.211\n7      1 mid      25 0.658\n8      1 high      5 0.132\n```\n\n\n:::\n:::\n\n\n\nBased on this information, which party would you say benefited from gerrymandering more in the 2018 midterms?\n\n## Render, commit, and push\n\n1.  Render your Quarto document.\n\n2.  Go to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\n\n3.  Click on push (the green arrow) to push your changes to your application exercise repo on GitHub.\n\n4.  Go to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you're good to go!\n",
    "supporting": [
      "ae-03-gerrymander-explore-I_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}