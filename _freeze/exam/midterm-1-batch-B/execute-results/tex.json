{
  "hash": "964e5caebd5a396295d83f4aeec80d2c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Midterm 1 Batch B\nsubtitle: Questions\nformat:\n  html: default\n  pdf: \n    linkcolor: \"black\"\nexecute:\n  echo: false\n---\n\n\n\n\n\n\n\n\n## Penguins\n\nThe `penguins` data set includes measurements for penguin species, including: flipper length, body mass, bill dimensions, and sex. The following table summarizes information on which species of penguins (Adelie, Gentoo, and Chinstrap) live on which islands (Biscoe, Dream, or Torgersen).\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\\begin{table}\n\\fontsize{12.0pt}{14.4pt}\\selectfont\n\\begin{tabular*}{\\linewidth}{@{\\extracolsep{\\fill}}rrrrr}\n\\toprule\nIsland & Adelie & Gentoo & Chinstrap & Total \\\\ \n\\midrule\\addlinespace[2.5pt]\nBiscoe & 44 & 124 & 0 & 168 \\\\ \nDream & 56 & 0 & 68 & 124 \\\\ \nTorgersen & 52 & 0 & 0 & 52 \\\\ \nTotal & 152 & 124 & 68 & 344 \\\\ \n\\bottomrule\n\\end{tabular*}\n\\end{table}\n\n:::\n:::\n\n\n\n\n\n\n### Question 1\n\nWhich of the following plots is the result of the following code?\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![](midterm-1-batch-B_files/figure-pdf/penguins-species-island-bar-plots-1.pdf)\n:::\n\n::: {.cell-output-display}\n![](midterm-1-batch-B_files/figure-pdf/penguins-species-island-bar-plots-2.pdf)\n:::\n\n::: {.cell-output-display}\n![](midterm-1-batch-B_files/figure-pdf/penguins-species-island-bar-plots-3.pdf)\n:::\n\n::: {.cell-output-display}\n![](midterm-1-batch-B_files/figure-pdf/penguins-species-island-bar-plots-4.pdf)\n:::\n\n::: {.cell-output-display}\n![](midterm-1-batch-B_files/figure-pdf/penguins-species-island-bar-plots-5.pdf)\n:::\n:::\n\n\n\n\n\n\n## NYC Flights\n\nThe `flights` dataset includes characteristics of all flights departing from New York City airports (JFK, LGA, EWR) in 2013. Below is a peek at the first ten rows of the `flights` data.\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 x 19\n    year month   day arr_delay carrier dep_time sched_dep_time dep_delay\n   <int> <int> <int>     <dbl> <chr>      <int>          <int>     <dbl>\n 1  2013     1     1        11 UA           517            515         2\n 2  2013     1     1        20 UA           533            529         4\n 3  2013     1     1        33 AA           542            540         2\n 4  2013     1     1       -18 B6           544            545        -1\n 5  2013     1     1       -25 DL           554            600        -6\n 6  2013     1     1        12 UA           554            558        -4\n 7  2013     1     1        19 B6           555            600        -5\n 8  2013     1     1       -14 EV           557            600        -3\n 9  2013     1     1        -8 B6           557            600        -3\n10  2013     1     1         8 AA           558            600        -2\n# i 336,766 more rows\n# i 11 more variables: arr_time <int>, sched_arr_time <int>, flight <int>,\n#   tailnum <chr>, origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>,\n#   hour <dbl>, minute <dbl>, time_hour <dttm>\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\\vspace{1cm}\n\n### Question 2\n\nBased on this output, which of the following must be [**true**]{.underline} about the `flights` data frame? **Select all that are true.**\n\na.  The `flights` data frame is a `tibble`.\n\nb.  The `flights` data frame has 10 rows.\n\nc.  The `flights` data frame has 8 columns.\n\nd.  The `carrier` variable in the `flights` data frame is a character variable.\n\ne.  There are no missing data in the `flights` data frame.\n\n### Question 3\n\nWhich of the following pipelines produce(s) the output shown below? **Select all that apply.**\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 x 5\n   arr_delay carrier  year month   day\n       <dbl> <chr>   <int> <int> <int>\n 1      1272 HA       2013     1     9\n 2      1127 MQ       2013     6    15\n 3      1109 MQ       2013     1    10\n 4      1007 AA       2013     9    20\n 5       989 MQ       2013     7    22\n 6       931 DL       2013     4    10\n 7       915 DL       2013     3    17\n 8       895 DL       2013     7    22\n 9       878 AA       2013    12     5\n10       875 MQ       2013     5     3\n# i 336,766 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n\na\\.\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\nb\\.\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\nc\\.\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\nd\\.\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\ne\\.\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Countries and populations\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\nWe have a small dataset of six countries and their populations:\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 x 2\n  country       population\n  <chr>              <dbl>\n1 Curacao            150  \n2 Ecuador          18001  \n3 Iraq             44496. \n4 New Zealand       5124. \n5 Palau               18.0\n6 United States   333288. \n```\n\n\n:::\n:::\n\n\n\n\n\n\nAnd another small dataset of five countries and the continent they're in:\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 x 3\n  entity      code  continent    \n  <chr>       <chr> <chr>        \n1 Angola      AGO   Africa       \n2 Curacao     CUW   North America\n3 Ecuador     ECU   South America\n4 Iraq        IRQ   Asia         \n5 New Zealand NZL   Oceania      \n```\n\n\n:::\n:::\n\n\n\n\n\n\nYou join the two datasets with the following:\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n### Question 4\n\nHow many rows will the resulting data frame have?\n\na.  4 \\hspace{1cm} b. 5 \\hspace{1cm} c. 6 \\hspace{1cm} d. 7 \\hspace{1cm} e. 8\n\n\n### Question 5\n\nWhat will be the columns of the resulting data frame?\n\na.  `country`, `population`\n\nb.  `country`, `population`, `code`, `continent`\n\nc.  `entity`, `code`, `continent`\n\nd.  `entity`, `population`, `code`, `continent`\n\ne.  `country`, `entity`, `population`, `code`, `continent`\n\n## Duke Forest houses\n\nThe `duke_forest` dataset includes information on prices and various other features (number of bedrooms, bathrooms, area, year built, type of cooling, type of heating, etc.) of houses in the Duke Forest neighborhood of Durham, NC.\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 98\nColumns: 13\n$ address    <chr> \"1 Learned Pl, Durham, NC 27705\", \"1616 Pinecrest Rd, Durha~\n$ price      <dbl> 1520000, 1030000, 420000, 680000, 428500, 456000, 1270000, ~\n$ bed        <dbl> 3, 5, 2, 4, 4, 3, 5, 4, 4, 3, 4, 4, 3, 5, 4, 5, 3, 4, 4, 3,~\n$ bath       <dbl> 4.0, 4.0, 3.0, 3.0, 3.0, 3.0, 5.0, 3.0, 5.0, 2.0, 3.0, 3.0,~\n$ area       <dbl> 6040, 4475, 1745, 2091, 1772, 1950, 3909, 2841, 3924, 2173,~\n$ type       <chr> \"Single Family\", \"Single Family\", \"Single Family\", \"Single ~\n$ year_built <dbl> 1972, 1969, 1959, 1961, 2020, 2014, 1968, 1973, 1972, 1964,~\n$ heating    <chr> \"Other, Gas\", \"Forced air, Gas\", \"Forced air, Gas\", \"Heat p~\n$ cooling    <fct> central, central, central, central, central, central, centr~\n$ parking    <chr> \"0 spaces\", \"Carport, Covered\", \"Garage - Attached, Covered~\n$ lot        <dbl> 0.97, 1.38, 0.51, 0.84, 0.16, 0.45, 0.94, 0.79, 0.53, 0.73,~\n$ hoa        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,~\n$ url        <chr> \"https://www.zillow.com/homedetails/1-Learned-Pl-Durham-NC-~\n```\n\n\n:::\n:::\n\n\n\n\n\n\nThe following summary table gives us some information about whether homes in this data set have garages and when they were built.\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\\begin{table}\n\\fontsize{12.0pt}{14.4pt}\\selectfont\n\\begin{tabular*}{\\linewidth}{@{\\extracolsep{\\fill}}lrr}\n\\toprule\n  & Built earlier than 1950 & Built in 1950 or later \\\\ \n\\midrule\\addlinespace[2.5pt]\nGarage & 5 & 33 \\\\ \nNo garage & 3 & 57 \\\\ \n\\bottomrule\n\\end{tabular*}\n\\end{table}\n\n:::\n:::\n\n\n\n\n\n\n\\vspace{1cm}\n\n*See next page for questions on this dataset.*\n\nThe pipeline below produces a data frame with a fewer number of rows than `duke_forest`.\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 x 5\n  parking year_built  price  area price_per_sqfeet\n  <chr>        <dbl>  <dbl> <dbl>            <dbl>\n1 Garage        1945 900000  2933            307. \n2 Garage        1938 265000  1300            204. \n3 Garage        1934 600000  2514            239. \n4 Garage        1941 412500  1661            248. \n5 Garage        1940 105000  1094             96.0\n```\n\n\n:::\n:::\n\n\n\n\n\n\n### Question 6\n\nWhich of the following goes in blanks (1) and (2)?\n\n|     | \\(1\\) | \\(2\\) |\n|-----|:-----:|:-----:|\n| a\\. |  `&`  |  `<`  |\n| b\\. |  `|`  |  `<`  |\n| c\\. |  `&`  | `>=`  |\n| d\\. |  `|`  | `>=`  |\n| e\\. |  `&`  | `!=`  |\n\n### Question 7\n\nWhich function or functions go into blank (3)? **Select all that apply.**\n\na.  `arrange()`\n\nb.  `mutate()`\n\nc.  `filter()`\n\nd.  `summarize()`\n\ne.  `slice()`\n\n\n## Law & Order\n\nYou've heard of the tidyverse, now let's visit the Law & Order-verse. Doink doink![^1]\n\n[^1]: \"Doink doink\" is the scene and episode introductory sound on the Law & Order series. If you've never heard it, you're not at any disadvantage for the exam. If you've ever heard it, good luck getting it out of your head!\n\nLaw & Order is a police procedural and legal drama television series that has been running since the 1990s. The Law & Order franchise includes a number of series such as Law & Order, Law & Order: SVU, Law & Order: Criminal Intent, etc.\n\nYou will work with data on average ratings for each season of three series from the Law & Order-verse â€“ a subset of the data from the previous questions. Below is a peek at the first ten rows of the Law & Order data.\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\nThe plot below shows the distributions of average ratings of various Law & Order series across seasons.\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](midterm-1-batch-B_files/figure-pdf/unnamed-chunk-22-1.pdf)\n:::\n:::\n\n\n\n\n\n\n### Question 8\n\nBased on the information from the side-by-side box plots, fill in the legend of the plot below with Law & Order series titles.\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 21 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](midterm-1-batch-B_files/figure-pdf/unnamed-chunk-23-1.pdf)\n:::\n:::\n\n\n\n\n\n\n\n### Question 9\n\nThe following code calculates the standard deviations of average season ratings of the five Law & Order series. Unfortunately, the output is partially erased and replaced with blanks.\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n```         \n# A tibble: 5 Ã— 3\n  title                         mean_av_rating sd_av_rating\n  <chr>                                  <dbl>        <dbl>\n1 Law & Order                            _(1)_        0.106\n2 Law & Order: Criminal Intent            8.20        0.129\n4 Law & Order: SVU                        8.67        _(2)_\n```\n\nBased on the visualizations you've seen of these data so far, which of the following is [**true**]{.underline} about the blanks in the output? **Select all that are true.**\n\na.  The **mean** of average ratings (Blank 1) of Law & Order seasons is **lower** than the other two means.\n\nb.  The **mean** of average ratings (Blank 1) of Law & Order seasons is **higher** than the other two means.\n\nc.  The **standard deviation** of average ratings of Law & Order: SVU seasons (Blank 2) is **lower** than the other two standard deviations.\n\nd.  The **standard deviation** of average ratings of Law & Order: SVU seasons (Blank 2) is **higher** than the other two standard deviations.\n\ne.  The **standard deviation** of average ratings of Law & Order: SVU seasons (Blank 2) is **between** the other two standard deviations.\n\n\n## Romance and comedy\n\nFinally, we focus on romance and comedy shows. We first filter the dataset for any shows that have romance or comedy as their genre (`genre_1`, `genre_2`, or `genre_3`) and then remove shows that have both of these genre labels. For the next two questions, we focus on these shows that we identify as either romance or comedy. We then calculate the mean of the average season ratings for each show, to obtain a single \"mean average rating\" value per show.\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\nThe plot below shows the distributions of mean average ratings of seasons of comedy and romance shows.\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](midterm-1-batch-B_files/figure-pdf/unnamed-chunk-26-1.pdf)\n:::\n:::\n\n\n\n\n\n\n### Question 10\n\nWhich of the following statements is [**true**]{.underline} about these distributions? **Select all that are true.**\n\na.  Mean average ratings of romance shows are bimodal.\nb.  Mean average ratings of comedy are unimodal.\nc.  Mean average ratings of romance shows is left skewed.\nd.  Mean average ratings of comedy shows is right skewed.\ne.  There are more romance shows than comedy shows.\n\n## Data\n\nThe data for the next few questions come from the Internet Movie Database (IMDB). Specifically, the data are a random sample of movies released between 1980 and 2020.\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\nThe name of the data frame used for this analysis is `movies`, and it contains the variables shown in @tbl-data-dictionary.\n\n\\setcounter{table}{0}\n\n| Variable | Description |\n|---------------------|---------------------------------------------------|\n| `name` | name of the movie |\n| `rating` | rating of the movie (R, PG, etc.) |\n| `genre` | main genre of the movie. |\n| `runtime` | duration of the movie |\n| `year` | year of release |\n| `release_date` | release date (YYYY-MM-DD) |\n| `release_country` | release country |\n| `score` | IMDB user rating |\n| `votes` | number of user votes |\n| `director` | the director |\n| `writer` | writer of the movie |\n| `star` | main actor/actress |\n| `country` | country of origin |\n| `budget` | the budget of a movie (some movies don't have this, so it appears as 0) |\n| `gross` | revenue of the movie |\n| `company` | the production company |\n\n: Data dictionary for `movies` {#tbl-data-dictionary tbl-colwidths=\"\\[20,80\\]\"}\n\nThe first thirty rows of the `movies` data frame are shown in @tbl-data, with variable types suppressed (since we'll ask about them later).\n\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n::: {#tbl-data}\nFirst 30 rows of `movies`, with variable types suppressed.\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 500 x 16\n   name           score runtime genre     rating    release_country release_date\n 1 Blue City        4.4 83 mins Action    R         United States   1986-05-02  \n 2 Winter Sleep     8.1 196     Drama     Not Rated Turkey          2014-06-12  \n 3 Rang De Basan~   8.1 167     Comedy    Not Rated United States   2006-01-26  \n 4 PokÃ©mon Detec~   6.6 104     Action    PG        United States   2019-05-10  \n 5 A Bad Moms Ch~   5.6 104     Comedy    R         United States   2017-11-01  \n 6 Replicas         5.5 107     Drama     PG-13     United States   2019-01-11  \n 7 Windy City       5.8 103     Drama     R         Uruguay         1986-01-01  \n 8 War for the P~   7.4 140     Action    PG-13     United States   2017-07-14  \n 9 Tales from th~   6.4 98      Crime     R         United States   1995-05-24  \n10 Fire with Fire   6.5 103     Drama     PG-13     United States   1986-05-09  \n11 Raising Helen    6   119     Comedy    PG-13     United States   2004-05-28  \n12 Feeling Minne~   5.4 99      Comedy    R         United States   1996-09-13  \n13 The Babe         5.9 115     Biography PG        United States   1992-04-17  \n14 The Real Blon~   6   105     Comedy    R         United States   1998-02-27  \n15 To vlemma tou~   7.6 176     Drama     Not Rated United States   1997-11-01  \n16 Going the Dis~   6.3 102     Comedy    R         United States   2010-09-03  \n17 Jung on zo       6.8 103     Action    R         Hong Kong       1993-06-24  \n18 Rita, Sue and~   6.5 93      Comedy    R         United Kingdom  1987-05-29  \n19 Phone Booth      7   81      Crime     R         United States   2003-04-04  \n20 Happy Death D~   6.6 96      Comedy    PG-13     United States   2017-10-13  \n21 Barely Legal     4.7 90      Comedy    R         Thailand        2006-05-25  \n22 Three Kings      7.1 114     Action    R         United States   1999-10-01  \n23 Menace II Soc~   7.5 97      Crime     R         United States   1993-05-26  \n24 Four Rooms       6.8 98      Comedy    R         United States   1995-12-25  \n25 Quartet          6.8 98      Comedy    PG-13     United States   2013-03-01  \n26 Tape             7.2 86      Drama     R         Denmark         2002-07-12  \n27 Marked for De~   6   93      Action    R         United States   1990-10-05  \n28 Congo            5.2 109     Action    PG-13     United States   1995-06-09  \n29 Stop-Loss        6.4 112     Drama     R         United States   2008-03-28  \n30 Con Air          6.9 115     Action    R         United States   1997-06-06  \n      budget     gross  votes  year director         writer        star         \n                                      \n 1  10000000   6947787   1100  1986 Michelle Manning Ross Macdona~ Judd Nelson  \n 2        NA   4018705  48000  2014 Nuri Bilge Ceyl~ Ebru Ceylan   Haluk Bilgin~\n 3        NA  10800778 115000  2006 Rakeysh Ompraka~ Renzil D'Sil~ Aamir Khan   \n 4 150000000 433921300 146000  2019 Rob Letterman    Dan Hernandez Ryan Reynolds\n 5  28000000 130560428  46000  2017 Jon Lucas        Jon Lucas     Mila Kunis   \n 6  30000000   9330075  34000  2018 Jeffrey Nachman~ Chad St. John Keanu Reeves \n 7        NA    343890    262  1984 Armyan Bernstein Armyan Berns~ John Shea    \n 8 150000000 490719763 235000  2017 Matt Reeves      Mark Bomback  Andy Serkis  \n 9   6000000  11837928   7400  1995 Rusty Cundieff   Rusty Cundie~ Clarence Wil~\n10        NA   4636169   1500  1986 Duncan Gibbins   Bill Phillips Craig Sheffer\n11  50000000  49718611  36000  2004 Garry Marshall   Patrick J. C~ Kate Hudson  \n12        NA   3124440  11000  1996 Steven Baigelman Steven Baige~ Keanu Reeves \n13        NA  19930973   9300  1992 Arthur Hiller    John Fusco    John Goodman \n14        NA     83488   3900  1997 Tom DiCillo      Tom DiCillo   Matthew Modi~\n15        NA        NA   6400  1995 Theodoros Angel~ Theodoros An~ Harvey Keitel\n16  32000000  42059111  57000  2010 Nanette Burstein Geoff LaTuli~ Drew Barrymo~\n17        NA   3741869   6100  1993 Kirk Wong        Tin Nam Chun  Jackie Chan  \n18        NA    124167   3600  1987 Alan Clarke      Andrea Dunbar Siobhan Finn~\n19  13000000  97837138 255000  2002 Joel Schumacher  Larry Cohen   Colin Farrell\n20   4800000 125479266 124000  2017 Christopher Lan~ Scott Lobdell Jessica Rothe\n21        NA     83439   5900  2003 David Mickey Ev~ David H. Ste~ Erik von Det~\n22  75000000 107752036 163000  1999 David O. Russell John Ridley   George Cloon~\n23   3500000  27912072  54000  1993 Albert Hughes    Allen Hughes  Tyrin Turner \n24   4000000   4257354 100000  1995 Directors        Allison Ande~ Tim Roth     \n25  11000000  59520298  19000  2012 Dustin Hoffman   Ronald Harwo~ Maggie Smith \n26    100000    515900  19000  2001 Richard Linklat~ Stephen Belb~ Ethan Hawke  \n27  12000000  57968936  21000  1990 Dwight H. Little Michael Grais Steven Seagal\n28  50000000 152022101  43000  1995 Frank Marshall   Michael Cric~ Laura Linney \n29  25000000  11212953  20000  2008 Kimberly Peirce  Mark Richard  Ryan Phillip~\n30  75000000 224012234 282000  1997 Simon West       Scott Rosenb~ Nicolas Cage \n# i 470 more rows\n# i 2 more variables: company, country\n```\n\n\n:::\n:::\n\n\n\n\n\n:::\n\n\n\n## Question 11\n\nThe `name` and `runtime` variables are shown below, with the variable types suppressed.\n\n::::: {layout=\"[0.5, 0.5]\"}\n::: {#firstcol}\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 500 x 2\n  name                      runtime\n1 Blue City                 83 mins\n2 Winter Sleep              196    \n3 Rang De Basanti           167    \n4 PokÃ©mon Detective Pikachu 104    \n5 A Bad Moms Christmas      104    \n6 Replicas                  107    \n# i 494 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n:::\n\n::: {#secondcol}\nWhat is the type of the `runtime` variable?\n\na.  Character\n\nb.  Double\n\nc.  Factor\n\nd.  Integer\n\ne.  Logical\n:::\n:::::\n\n\\vspace{2cm}\n\n## Question 12\n\nThe code below summarizes the data in a certain way.\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 x 1\n  `sum(release_country == \"United States\")`\n                                      <int>\n1                                       435\n```\n\n\n:::\n:::\n\n\n\n\n\n\nWhich of the following is [**TRUE**]{.underline} about the code and its result? **Select all that are true.**\n\na.  Evaluates whether each `release_country` is equal to `\"United States\"` or not, which results in a logical variable.\n\nb.  Filters out rows where `release_country` is not equal to `\"United States\"` and counts the remaining rows.\n\nc.  Sums the logical values, where each `TRUE` is considered a 1 and each `FALSE` is considered a 0.\n\nd.  Results in a character vector.\n\ne.  The result shows there are 435 movies released in the United States.\n\n## Question 13\n\nSuppose you want a visualization that shows the number of movies in the sample in each `genre`. Your first attempt is as follows.\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](midterm-1-batch-B_files/figure-pdf/unnamed-chunk-33-1.pdf)\n:::\n:::\n\n\n\n\n\n\nA friend of yours says that the visualization is difficult to read and they suggest using the following visualization instead.\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](midterm-1-batch-B_files/figure-pdf/unnamed-chunk-34-1.pdf)\n:::\n:::\n\n\n\n\n\n\nWhich of the following modifications would your friend have made to your code to create their version? **Select all that apply.**\n\na.  Combine movies in genres other than Comedy, Drama, Action, and Horror into a new level called `\"Other\"`.\n\nb.  Reorder the levels in descending order of numbers of observations, except for the `\"Other\"` level.\n\nc.  Map `genre` to the `y` aesthetic.\n\nd.  Add a title, x and y-axis labels, and a caption.\n\ne.  Filter out all moves in genres other than Comedy, Drama, Action, and Horror before plotting.\n\n\n## Question 14\n\nWhich of the following is [**TRUE**]{.underline} about the code and its result? **Select all that are true.**\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 x 6\n  rating    Other Drama Action Comedy Horror\n  <fct>     <int> <int>  <int>  <int>  <int>\n1 G             5     1      1      1      0\n2 PG           38    13     10     18      0\n3 PG-13        19    25     35     35      0\n4 R            45    50     57     96     21\n5 NC-17         1     2      0      1      0\n6 Not Rated     4    11      4      6      1\n```\n\n\n:::\n:::\n\n\n\n\n\n\na.  The code counts how many movies are in each rating and genre combination.\n\nb.  The code sorts the results in descending order.\n\nc.  Each row of the output is a movie.\n\nd.  The output shows that there are six distinct ratings in the dataset.\n\ne.  The code reduces the number of variables and observations in the `movies` data frame to six.\n",
    "supporting": [
      "midterm-1-batch-B_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "\\usepackage{booktabs}\n\\usepackage{caption}\n\\usepackage{longtable}\n\\usepackage{colortbl}\n\\usepackage{array}\n\\usepackage{anyfontsize}\n\\usepackage{multirow}\n"
      ]
    },
    "engineDependencies": {},
    "preserve": null,
    "postProcess": true
  }
}