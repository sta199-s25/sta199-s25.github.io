{
  "hash": "54640f38fb1ebe57953d3a34d7943b79",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exploring data II\"\nsubtitle: \"Lecture 5\"\ndate: \"2025-01-28\"\nformat: revealjs\nauto-stretch: false\n---\n\n\n\n<!-- begin: ae definition -->\n\n\n\n\n\n\n\n<!-- end: ae definition -->\n\n# Warm-up\n\n## While you wait... {.medium}\n\nPrepare for today's application exercise: **ae\\-04\\-gerrymander\\-explore\\-II**\n\n::: appex\n-   Go to your `ae` project in RStudio.\n\n-   Make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   Click Pull to get today's application exercise file: *ae\\-04\\-gerrymander\\-explore\\-II\\.qmd*.\n\n-   Wait till the you're prompted to work on the application exercise during class before editing the file.\n:::\n\n::: callout-note\n## AEs are due by the end of class\n\nSuccessful completion means at least one commit + push by 2PM today\n:::\n\n## Intro to Coding Principles with Dav King\n\n::: {.columns .v-center-container}\n::: column\n-   8:30 PM Thursday January 30;\n-   Social Sciences 139;\n-   Space is limited, so please sign up;\n-   Materials will be posted afterward;\n-   We might do more if there is interest and Dav is available.\n:::\n\n![](images/05/dav_qr.png)\n:::\n\n:::\n\n## Reminder: Lab guidelines {.medium}\n\n::: {.incremental .xsmall}\n-   Plots should include an informative title, axes and legends should have human-readable labels, and careful consideration should be given to aesthetic choices.\n\n-   Code should follow the [tidyverse style](https://style.tidyverse.org/) ([style.tidyverse.org](https://style.tidyverse.org/)) Particularly,\n\n    -   space before and line breaks after each `+` when building a `ggplot`\n    -   space before and line breaks after each `|>` in a data transformation pipeline\n    -   code should be properly indented\n    -   spaces around `=` signs and spaces after commas\n\n-   **Proofread your rendered PDF before submission!** We cannot give you points for stuff we cannot see, so make sure your code and output is not running off the page. Use line breaks.\n\n-   At least three commits with meaningful commit messages.\n:::\n\n## Code style and readability\n\n-   Whydowecareaboutthestyleandreadabilityofyourcode? [$\\rightarrow$ Why do we care about the style and readability of your code?]{.fragment}\n\n. . .\n\n-   Je voudrais un cafe [$\\rightarrow$ Je voudrais un café]{.fragment}\n\n# `gerrymander`\n\n## Packages\n\n-   For the data: [**usdata**](https://openintrostat.github.io/usdata/)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(usdata)\n```\n:::\n\n\n\n-   For the analysis: [**tidyverse**](https://www.tidyverse.org/packages/) and [**ggthemes**](https://jrnold.github.io/ggthemes/)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggthemes)\n```\n:::\n\n\n\n## From last time {.scrollable .smaller}\n\n::: question\nIs a Congressional District more likely to have high prevalence of gerrymandering if a Democrat was able to flip the seat in the 2018 election? Support your answer with a visualization as well as summary statistics.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gerrymander, aes(x = flip18, fill = gerry)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](05-exploring-data-2_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n\n## From last time {.scrollable .smaller}\n\n::: question\nIs a Congressional District more likely to have high prevalence of gerrymandering if a Democrat was able to flip the seat in the 2018 election? Support your answer with a visualization as well as summary statistics.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gerrymander, aes(x = flip18, fill = gerry)) +\n  geom_bar(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](05-exploring-data-2_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n\n## From last time {.scrollable .smaller}\n\n::: question\nIs a Congressional District more likely to have high prevalence of gerrymandering if a Democrat was able to flip the seat in the 2018 election? Support your answer with a visualization as well as summary statistics.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gerrymander, aes(x = flip18, fill = gerry)) +\n  geom_bar(position = \"fill\")\n```\n\n::: {.cell-output-display}\n![](05-exploring-data-2_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n\n## From last time {.scrollable .smaller}\n\n::: question\nIs a Congressional District more likely to have high prevalence of gerrymandering if a Democrat was able to flip the seat in the 2018 election? Support your answer with a visualization as well as summary statistics.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  count(flip18, gerry) |>\n  group_by(flip18) |>\n  mutate(prop = n / sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 4\n# Groups:   flip18 [3]\n  flip18 gerry     n  prop\n   <dbl> <fct> <int> <dbl>\n1     -1 low       2 0.4  \n2     -1 mid       3 0.6  \n3      0 low      52 0.133\n4      0 mid     242 0.617\n5      0 high     98 0.25 \n6      1 low       8 0.211\n7      1 mid      25 0.658\n8      1 high      5 0.132\n```\n\n\n:::\n:::\n\n\n\n## Step 1 {.scrollable .medium}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 435 × 12\n   district last_name first_name party16 clinton16 trump16 dem16 state party18\n   <chr>    <chr>     <chr>      <chr>       <dbl>   <dbl> <dbl> <chr> <chr>  \n 1 AK-AL    Young     Don        R            37.6    52.8     0 AK    R      \n 2 AL-01    Byrne     Bradley    R            34.1    63.5     0 AL    R      \n 3 AL-02    Roby      Martha     R            33      64.9     0 AL    R      \n 4 AL-03    Rogers    Mike D.    R            32.3    65.3     0 AL    R      \n 5 AL-04    Aderholt  Rob        R            17.4    80.4     0 AL    R      \n 6 AL-05    Brooks    Mo         R            31.3    64.7     0 AL    R      \n 7 AL-06    Palmer    Gary       R            26.1    70.8     0 AL    R      \n 8 AL-07    Sewell    Terri      D            69.8    28.6     1 AL    D      \n 9 AR-01    Crawford  Rick       R            30.2    65       0 AR    R      \n10 AR-02    Hill      French     R            41.7    52.4     0 AR    R      \n# ℹ 425 more rows\n# ℹ 3 more variables: dem18 <dbl>, flip18 <dbl>, gerry <fct>\n```\n\n\n:::\n:::\n\n\n\n## Step 2 {.scrollable}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  count(flip18, gerry)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 3\n  flip18 gerry     n\n   <dbl> <fct> <int>\n1     -1 low       2\n2     -1 mid       3\n3      0 low      52\n4      0 mid     242\n5      0 high     98\n6      1 low       8\n7      1 mid      25\n8      1 high      5\n```\n\n\n:::\n:::\n\n\n\n## Step 3 {.scrollable}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  count(flip18, gerry) |>\n  group_by(flip18)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 3\n# Groups:   flip18 [3]\n  flip18 gerry     n\n   <dbl> <fct> <int>\n1     -1 low       2\n2     -1 mid       3\n3      0 low      52\n4      0 mid     242\n5      0 high     98\n6      1 low       8\n7      1 mid      25\n8      1 high      5\n```\n\n\n:::\n:::\n\n\n\n## Step 4 {.scrollable}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  count(flip18, gerry) |>\n  group_by(flip18) |>\n  mutate(prop = n / sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 4\n# Groups:   flip18 [3]\n  flip18 gerry     n  prop\n   <dbl> <fct> <int> <dbl>\n1     -1 low       2 0.4  \n2     -1 mid       3 0.6  \n3      0 low      52 0.133\n4      0 mid     242 0.617\n5      0 high     98 0.25 \n6      1 low       8 0.211\n7      1 mid      25 0.658\n8      1 high      5 0.132\n```\n\n\n:::\n:::\n\n\n\n## Same thing, without the pipe {.scrollable .small}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmutate(group_by(count(gerrymander, flip18, gerry), flip18), prop = n / sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 4\n# Groups:   flip18 [3]\n  flip18 gerry     n  prop\n   <dbl> <fct> <int> <dbl>\n1     -1 low       2 0.4  \n2     -1 mid       3 0.6  \n3      0 low      52 0.133\n4      0 mid     242 0.617\n5      0 high     98 0.25 \n6      1 low       8 0.211\n7      1 mid      25 0.658\n8      1 high      5 0.132\n```\n\n\n:::\n:::\n\n\n\n## With the pipe\n\n![](images/05/dolls_pipe.png)\n\n## Without the pipe\n\n![](images/05/dolls_nest.png)\n\n# `group_by()`, `summarize()`, `count()`\n\n## What does `group_by()` do? {.scrollable}\n\n::: question\nWhat does `group_by()` do in the following pipeline?\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  count(flip18, gerry) |>\n  group_by(flip18) |>\n  mutate(prop = n / sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 4\n# Groups:   flip18 [3]\n  flip18 gerry     n  prop\n   <dbl> <fct> <int> <dbl>\n1     -1 low       2 0.4  \n2     -1 mid       3 0.6  \n3      0 low      52 0.133\n4      0 mid     242 0.617\n5      0 high     98 0.25 \n6      1 low       8 0.211\n7      1 mid      25 0.658\n8      1 high      5 0.132\n```\n\n\n:::\n:::\n\n\n\n## What does `group_by()` do? {.scrollable}\n\n::: question\nWhat does `group_by()` do in the following pipeline?\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  count(flip18, gerry) |>\n  #group_by(flip18) |>\n  mutate(prop = n / sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 4\n  flip18 gerry     n    prop\n   <dbl> <fct> <int>   <dbl>\n1     -1 low       2 0.00460\n2     -1 mid       3 0.00690\n3      0 low      52 0.120  \n4      0 mid     242 0.556  \n5      0 high     98 0.225  \n6      1 low       8 0.0184 \n7      1 mid      25 0.0575 \n8      1 high      5 0.0115 \n```\n\n\n:::\n:::\n\n\n\n## Let's simplify! {.scrollable}\n\n::: question\nWhat does `group_by()` do in the following pipeline?\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  group_by(state) |>\n  summarize(mean_trump16 = mean(trump16))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 2\n   state mean_trump16\n   <chr>        <dbl>\n 1 AK            52.8\n 2 AL            62.6\n 3 AR            60.9\n 4 AZ            46.9\n 5 CA            31.7\n 6 CO            43.6\n 7 CT            41.0\n 8 DE            41.9\n 9 FL            47.9\n10 GA            51.3\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n\n\n## Let's simplify! {.scrollable}\n\n::: question\nWhat does `group_by()` do in the following pipeline?\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  #group_by(state) |>\n  summarize(mean_trump16 = mean(trump16))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  mean_trump16\n         <dbl>\n1         45.9\n```\n\n\n:::\n:::\n\n\n\n## `group_by()` {.scrollable .medium}\n\n-   it converts a data frame to a grouped data frame, where subsequent operations are performed once per group\n\n-   `ungroup()` removes grouping\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  group_by(state)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 435 × 12\n# Groups:   state [50]\n   district last_name first_name party16 clinton16 trump16 dem16 state party18\n   <chr>    <chr>     <chr>      <chr>       <dbl>   <dbl> <dbl> <chr> <chr>  \n 1 AK-AL    Young     Don        R            37.6    52.8     0 AK    R      \n 2 AL-01    Byrne     Bradley    R            34.1    63.5     0 AL    R      \n 3 AL-02    Roby      Martha     R            33      64.9     0 AL    R      \n 4 AL-03    Rogers    Mike D.    R            32.3    65.3     0 AL    R      \n 5 AL-04    Aderholt  Rob        R            17.4    80.4     0 AL    R      \n 6 AL-05    Brooks    Mo         R            31.3    64.7     0 AL    R      \n 7 AL-06    Palmer    Gary       R            26.1    70.8     0 AL    R      \n 8 AL-07    Sewell    Terri      D            69.8    28.6     1 AL    D      \n 9 AR-01    Crawford  Rick       R            30.2    65       0 AR    R      \n10 AR-02    Hill      French     R            41.7    52.4     0 AR    R      \n# ℹ 425 more rows\n# ℹ 3 more variables: dem18 <dbl>, flip18 <dbl>, gerry <fct>\n```\n\n\n:::\n:::\n\n\n\n## `group_by()` {.scrollable .medium}\n\n-   it converts a data frame to a grouped data frame, where subsequent operations are performed once per group\n\n-   `ungroup()` removes grouping\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  group_by(state) |>\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 435 × 12\n   district last_name first_name party16 clinton16 trump16 dem16 state party18\n   <chr>    <chr>     <chr>      <chr>       <dbl>   <dbl> <dbl> <chr> <chr>  \n 1 AK-AL    Young     Don        R            37.6    52.8     0 AK    R      \n 2 AL-01    Byrne     Bradley    R            34.1    63.5     0 AL    R      \n 3 AL-02    Roby      Martha     R            33      64.9     0 AL    R      \n 4 AL-03    Rogers    Mike D.    R            32.3    65.3     0 AL    R      \n 5 AL-04    Aderholt  Rob        R            17.4    80.4     0 AL    R      \n 6 AL-05    Brooks    Mo         R            31.3    64.7     0 AL    R      \n 7 AL-06    Palmer    Gary       R            26.1    70.8     0 AL    R      \n 8 AL-07    Sewell    Terri      D            69.8    28.6     1 AL    D      \n 9 AR-01    Crawford  Rick       R            30.2    65       0 AR    R      \n10 AR-02    Hill      French     R            41.7    52.4     0 AR    R      \n# ℹ 425 more rows\n# ℹ 3 more variables: dem18 <dbl>, flip18 <dbl>, gerry <fct>\n```\n\n\n:::\n:::\n\n\n\n## `group_by() |> summarize()` {.smaller}\n\nA common pipeline is `group_by()` and then `summarize()` to **calculate** summary statistics for each group:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  group_by(state) |>\n  summarize(\n    mean_trump16 = mean(trump16),\n    median_trump16 = median(trump16)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 3\n   state mean_trump16 median_trump16\n   <chr>        <dbl>          <dbl>\n 1 AK            52.8           52.8\n 2 AL            62.6           64.9\n 3 AR            60.9           63.0\n 4 AZ            46.9           47.7\n 5 CA            31.7           28.4\n 6 CO            43.6           41.3\n 7 CT            41.0           40.4\n 8 DE            41.9           41.9\n 9 FL            47.9           49.6\n10 GA            51.3           56.6\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n\n\n## `group_by() |> summarize()` {.smaller}\n\nThis pipeline can also be used to **count** number of observations for each group:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  group_by(state) |>\n  summarize(n = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 2\n   state     n\n   <chr> <int>\n 1 AK        1\n 2 AL        7\n 3 AR        4\n 4 AZ        9\n 5 CA       53\n 6 CO        7\n 7 CT        5\n 8 DE        1\n 9 FL       27\n10 GA       14\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n\n\n## `summarize()` {.smaller}\n\n``` r\n... |>\n  summarize(\n    name_of_summary_statistic = summary_function(variable)\n  )\n```\n\n. . .\n\n-   `name_of_summary_statistic`: Anything you want to call it!\n    -   Recommendation: Keep it short and evocative\n-   `summary_function()`:\n    -   `n()`: number of observations\n    -   `mean()`: mean\n    -   `median()`: median\n    -   ...\n\n## Spot the difference {.smaller}\n\n::: question\nWhat's the difference between the following two pipelines?\n:::\n\n::: columns\n::: column\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  group_by(state) |>\n  summarize(n = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 2\n   state     n\n   <chr> <int>\n 1 AK        1\n 2 AL        7\n 3 AR        4\n 4 AZ        9\n 5 CA       53\n 6 CO        7\n 7 CT        5\n 8 DE        1\n 9 FL       27\n10 GA       14\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n::: column\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  count(state)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 2\n   state     n\n   <chr> <int>\n 1 AK        1\n 2 AL        7\n 3 AR        4\n 4 AZ        9\n 5 CA       53\n 6 CO        7\n 7 CT        5\n 8 DE        1\n 9 FL       27\n10 GA       14\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n## `count()`\n\n::: columns\n::: {.column width=\"40%\"}\n``` r\n... |>\n  count(variable)\n```\n:::\n\n::: {.column width=\"60%\"}\n``` r\n... |>\n  count(variable1, variable2)\n```\n:::\n:::\n\n-   Count the number of observations in each level of variable(s)\n\n-   Place the counts in a variable called `n`\n\n## `count()` and `sort` {.scrollable}\n\n::: question\nWhat does the following pipeline do? Rewrite it with `count()` instead.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  group_by(state) |>\n  summarize(n = n()) |>\n  arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 2\n   state     n\n   <chr> <int>\n 1 CA       53\n 2 TX       36\n 3 FL       27\n 4 NY       27\n 5 IL       18\n 6 PA       18\n 7 OH       16\n 8 GA       14\n 9 MI       14\n10 NC       13\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n\n\n## `count()` and `sort` {.scrollable}\n\n::: question\nWhat does the following pipeline do? Rewrite it with `count()` instead.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  count(state) |>\n  arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 2\n   state     n\n   <chr> <int>\n 1 CA       53\n 2 TX       36\n 3 FL       27\n 4 NY       27\n 5 IL       18\n 6 PA       18\n 7 OH       16\n 8 GA       14\n 9 MI       14\n10 NC       13\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n\n\n## `count()` and `sort` {.scrollable}\n\n::: question\nWhat does the following pipeline do? Rewrite it with `count()` instead.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  count(state, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 2\n   state     n\n   <chr> <int>\n 1 CA       53\n 2 TX       36\n 3 FL       27\n 4 NY       27\n 5 IL       18\n 6 PA       18\n 7 OH       16\n 8 GA       14\n 9 MI       14\n10 NC       13\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n\n\n# `mutate()`\n\n## Flip the question\n\n::: callout-note\nIs a Congressional District more likely to have high prevalence of gerrymandering if a Democrat was able to flip the seat in the 2018 election?\n:::\n\nvs.\n\n::: callout-note\nIs a Congressional District more likely to be flipped to a Democratic seat if it has high prevalence of gerrymandering or low prevalence of gerrymandering?\n:::\n\n## Flipping vs. gerrymandering prevalence {.smaller}\n\n::: {.question .xsmall}\nThe following code should produce a visualization that answers the question \"Is a Congressional District more likely to be flipped to a Democratic seat if it has high prevalence of gerrymandering or low prevalence of gerrymandering?\" However, it produces a `warning` and an unexpected plot. What's going on?\n:::\n\n::: columns\n::: column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  gerrymander, \n  aes(x = gerry, fill = flip18)\n  ) +\n  geom_bar(position = \"fill\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The following aesthetics were dropped during statistical transformation: fill.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n```\n\n\n:::\n:::\n\n\n:::\n\n::: column\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](05-exploring-data-2_files/figure-revealjs/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Another glimpse at `gerrymander` {.smaller}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(gerrymander)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 435\nColumns: 12\n$ district   <chr> \"AK-AL\", \"AL-01\", \"AL-02\", \"AL-03\", \"AL-04\", \"AL-05\", \"AL-0…\n$ last_name  <chr> \"Young\", \"Byrne\", \"Roby\", \"Rogers\", \"Aderholt\", \"Brooks\", \"…\n$ first_name <chr> \"Don\", \"Bradley\", \"Martha\", \"Mike D.\", \"Rob\", \"Mo\", \"Gary\",…\n$ party16    <chr> \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",…\n$ clinton16  <dbl> 37.6, 34.1, 33.0, 32.3, 17.4, 31.3, 26.1, 69.8, 30.2, 41.7,…\n$ trump16    <dbl> 52.8, 63.5, 64.9, 65.3, 80.4, 64.7, 70.8, 28.6, 65.0, 52.4,…\n$ dem16      <dbl> 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,…\n$ state      <chr> \"AK\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AR\", \"AR\",…\n$ party18    <chr> \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",…\n$ dem18      <dbl> 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0,…\n$ flip18     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,…\n$ gerry      <fct> mid, high, high, high, high, high, high, high, mid, mid, mi…\n```\n\n\n:::\n:::\n\n\n\n## `mutate()`\n\n-   We want to use `flip18` as a categorical variable\n\n-   But it's stored as a numeric\n\n-   So we need to change its type first, before we can use it as a categorical variable\n\n-   The `mutate()` function transforms (*mutates*) a data frame by creating a new column or updating an existing one\n\n## `mutate()` in action {.scrollable .small}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  mutate(flip18 = as.factor(flip18))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 435 × 12\n   district last_name first_name party16 clinton16 trump16 dem16 state party18\n   <chr>    <chr>     <chr>      <chr>       <dbl>   <dbl> <dbl> <chr> <chr>  \n 1 AK-AL    Young     Don        R            37.6    52.8     0 AK    R      \n 2 AL-01    Byrne     Bradley    R            34.1    63.5     0 AL    R      \n 3 AL-02    Roby      Martha     R            33      64.9     0 AL    R      \n 4 AL-03    Rogers    Mike D.    R            32.3    65.3     0 AL    R      \n 5 AL-04    Aderholt  Rob        R            17.4    80.4     0 AL    R      \n 6 AL-05    Brooks    Mo         R            31.3    64.7     0 AL    R      \n 7 AL-06    Palmer    Gary       R            26.1    70.8     0 AL    R      \n 8 AL-07    Sewell    Terri      D            69.8    28.6     1 AL    D      \n 9 AR-01    Crawford  Rick       R            30.2    65       0 AR    R      \n10 AR-02    Hill      French     R            41.7    52.4     0 AR    R      \n# ℹ 425 more rows\n# ℹ 3 more variables: dem18 <dbl>, flip18 <fct>, gerry <fct>\n```\n\n\n:::\n:::\n\n\n\n## `mutate()` in action {.scrollable .small}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  mutate(flip18 = as.factor(flip18)) |>\n  relocate(flip18)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 435 × 12\n   flip18 district last_name first_name party16 clinton16 trump16 dem16 state\n   <fct>  <chr>    <chr>     <chr>      <chr>       <dbl>   <dbl> <dbl> <chr>\n 1 0      AK-AL    Young     Don        R            37.6    52.8     0 AK   \n 2 0      AL-01    Byrne     Bradley    R            34.1    63.5     0 AL   \n 3 0      AL-02    Roby      Martha     R            33      64.9     0 AL   \n 4 0      AL-03    Rogers    Mike D.    R            32.3    65.3     0 AL   \n 5 0      AL-04    Aderholt  Rob        R            17.4    80.4     0 AL   \n 6 0      AL-05    Brooks    Mo         R            31.3    64.7     0 AL   \n 7 0      AL-06    Palmer    Gary       R            26.1    70.8     0 AL   \n 8 0      AL-07    Sewell    Terri      D            69.8    28.6     1 AL   \n 9 0      AR-01    Crawford  Rick       R            30.2    65       0 AR   \n10 0      AR-02    Hill      French     R            41.7    52.4     0 AR   \n# ℹ 425 more rows\n# ℹ 3 more variables: party18 <chr>, dem18 <dbl>, gerry <fct>\n```\n\n\n:::\n:::\n\n\n\n## Revisit the plot {.scrollable .medium}\n\n::: question\n\"Is a Congressional District more likely to be flipped to a Democratic seat if it has high prevalence of gerrymandering or low prevalence of gerrymandering?\"\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander |>\n  mutate(flip18 = as.factor(flip18)) |>\n  ggplot(aes(x = gerry, fill = flip18)) +\n  geom_bar(position = \"fill\")\n```\n\n::: {.cell-output-display}\n![](05-exploring-data-2_files/figure-revealjs/unnamed-chunk-31-1.png){width=960}\n:::\n:::\n\n\n\n# Application exercise\n\n## ae\\-04\\-gerrymander\\-explore\\-II {.smaller}\n\n::: appex\n-   Go to your ae project in RStudio.\n\n-   If you haven't yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   If you haven't yet done so, click Pull to get today's application exercise file: *ae\\-04\\-gerrymander\\-explore\\-II\\.qmd*.\n\n-   Work through the application exercise in class, and render, commit, and push your edits by the end of class.\n:::\n\n## Recap: aesthetic mappings\n\n-   **Local** aesthetic mappings for a given `geom`\n\n-   **Global** aesthetic mappings for all `geom`s\n",
    "supporting": [
      "05-exploring-data-2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}