{
  "hash": "2f667e801ca05239f8358475a12cd744",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Joining data\"\nsubtitle: \"Lecture 7\"\ndate: \"2025-02-04\"\nformat: revealjs\nauto-stretch: false\n---\n\n\n\n<!-- begin: ae definition -->\n\n\n\n\n\n\n\n<!-- end: ae definition -->\n\n## While you wait... {.smaller}\n\nPrepare for today's application exercise: **ae\\-06\\-taxes\\-join**\n\n::: appex\n-   Go to your `ae` project in RStudio.\n\n-   Make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   Click Pull to get today's application exercise file: *ae\\-06\\-taxes\\-join\\.qmd*.\n\n-   Wait till the you're prompted to work on the application exercise during class before editing the file.\n:::\n\n# Recap: pivoting\n\n##  {.smaller}\n\n![](images/07/tidyr-pivoting.gif){fig-align=\"center\"}\n\n# Recoding data\n\n## What's going on in this plot? {.smaller}\n\n::: question\nCan you guess the variable plotted here?\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-joining-data_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n\n## Sales taxes in US states {.smaller}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsales_taxes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 51 × 5\n   state      state_tax_rate avg_local_tax_rate combined_rate max_local_tax_rate\n   <chr>               <dbl>              <dbl>         <dbl>              <dbl>\n 1 Alabama            0.04               0.0529        0.0929             0.075 \n 2 Alaska             0                  0.0182        0.0182             0.0785\n 3 Arizona            0.056              0.0278        0.0838             0.053 \n 4 Arkansas           0.065              0.0295        0.0945             0.0613\n 5 California         0.0725             0.016         0.0885             0.0475\n 6 Colorado           0.029              0.0491        0.0781             0.083 \n 7 Connectic…         0.0635             0             0.0635             0     \n 8 Delaware           0                  0             0                  0     \n 9 Florida            0.06               0.01          0.07               0.02  \n10 Georgia            0.04               0.0338        0.0738             0.05  \n# ℹ 41 more rows\n```\n\n\n:::\n:::\n\n\n\n## Sales tax in swing states {.smaller}\n\n::: question\nSuppose you're tasked with the following:\n\n> Compare the average state sales tax rates of swing states (Arizona, Georgia, Michigan, Nevada, North Carolina, Pennsylvania, and Wisconsin) vs. non-swing states.\n\nHow would you approach this task?\n:::\n\n. . .\n\n-   Create a new variable called `swing_state` with levels `\"Swing\"` and `\"Non-swing\"`\n-   Group by `swing_state`\n-   Summarize to find the mean sales tax in each type of state\n\n## ae\\-06\\-taxes\\-join {.smaller}\n\n::: appex\n-   Go to your ae project in RStudio.\n\n-   If you haven't yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   If you haven't yet done so, click Pull to get today's application exercise file: *ae\\-06\\-taxes\\-join\\.qmd*.\n\n-   Work through the application exercise in class, and render, commit, and push your edits by the end of class.\n:::\n\n## `mutate()` with `if_else()` {.smaller .scrollable}\n\n::: task\nCreate a new variable called `swing_state` with levels `\"Swing\"` and `\"Non-swing\"`.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlist_of_swing_states <- c(\"Arizona\", \"Georgia\", \"Michigan\", \"Nevada\", \n                          \"North Carolina\", \"Pennsylvania\", \"Wisconsin\")\n\nsales_taxes <- sales_taxes |>\n  mutate(\n    swing_state = if_else(state %in% list_of_swing_states,\n                          \"Swing\",\n                          \"Non-swing\")) |>\n  relocate(swing_state)\n\nsales_taxes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 51 × 6\n   swing_state state       state_tax_rate avg_local_tax_rate combined_rate\n   <chr>       <chr>                <dbl>              <dbl>         <dbl>\n 1 Non-swing   Alabama             0.04               0.0529        0.0929\n 2 Non-swing   Alaska              0                  0.0182        0.0182\n 3 Swing       Arizona             0.056              0.0278        0.0838\n 4 Non-swing   Arkansas            0.065              0.0295        0.0945\n 5 Non-swing   California          0.0725             0.016         0.0885\n 6 Non-swing   Colorado            0.029              0.0491        0.0781\n 7 Non-swing   Connecticut         0.0635             0             0.0635\n 8 Non-swing   Delaware            0                  0             0     \n 9 Non-swing   Florida             0.06               0.01          0.07  \n10 Swing       Georgia             0.04               0.0338        0.0738\n# ℹ 41 more rows\n# ℹ 1 more variable: max_local_tax_rate <dbl>\n```\n\n\n:::\n:::\n\n\n\n## Recap: `if_else()`\n\n``` r\nif_else(\n  x == y,               #<1>\n  \"x is equal to y\",    #<2>\n  \"x is not equal to y\" #<3>\n)\n```\n\n1.  Condition\n2.  Value if condition is `TRUE`\n3.  Value if condition is `FALSE`\n\n## Sales tax in swing states {.smaller .scrollable}\n\n::: task\nCompare the average state sales tax rates of swing states vs. non-swing states.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsales_taxes |>\n  group_by(swing_state) |>\n  summarize(mean_state_tax = mean(state_tax_rate))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  swing_state mean_state_tax\n  <chr>                <dbl>\n1 Non-swing           0.0504\n2 Swing               0.0546\n```\n\n\n:::\n:::\n\n\n\n## Sales tax in coastal states {.smaller}\n\n::: question\nSuppose you're tasked with the following:\n\n> Compare the average state sales tax rates of states on the Pacific Coast, states on the Atlantic Coast, and the rest of the states.\n\nHow would you approach this task?\n:::\n\n. . .\n\n-   Create a new variable called `coast` with levels `\"Pacific\"`, `\"Atlantic\"`, and `\"Neither\"`\n-   Group by `coast`\n-   Summarize to find the mean sales tax in each type of state\n\n## `mutate()` with `case_when()` {.smaller .scrollable}\n\n::: task\nCreate a new variable called `coast` with levels `\"Pacific\"`, `\"Atlantic\"`, and `\"Neither\"`.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacific_coast <- c(\"Alaska\", \"Washington\", \"Oregon\", \"California\", \"Hawaii\")\n\natlantic_coast <- c(\n  \"Connecticut\", \"Delaware\", \"Georgia\", \"Florida\", \"Maine\", \"Maryland\", \n  \"Massachusetts\", \"New Hampshire\", \"New Jersey\", \"New York\", \n  \"North Carolina\", \"Rhode Island\", \"South Carolina\", \"Virginia\"\n)\n\nsales_taxes <- sales_taxes |>\n  mutate(\n    coast = case_when(\n      state %in% pacific_coast ~ \"Pacific\",\n      state %in% atlantic_coast ~ \"Atlantic\",\n      .default = \"Neither\"\n    )\n  ) |>\n  relocate(coast)\n\nsales_taxes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 51 × 7\n   coast    swing_state state    state_tax_rate avg_local_tax_rate combined_rate\n   <chr>    <chr>       <chr>             <dbl>              <dbl>         <dbl>\n 1 Neither  Non-swing   Alabama          0.04               0.0529        0.0929\n 2 Pacific  Non-swing   Alaska           0                  0.0182        0.0182\n 3 Neither  Swing       Arizona          0.056              0.0278        0.0838\n 4 Neither  Non-swing   Arkansas         0.065              0.0295        0.0945\n 5 Pacific  Non-swing   Califor…         0.0725             0.016         0.0885\n 6 Neither  Non-swing   Colorado         0.029              0.0491        0.0781\n 7 Atlantic Non-swing   Connect…         0.0635             0             0.0635\n 8 Atlantic Non-swing   Delaware         0                  0             0     \n 9 Atlantic Non-swing   Florida          0.06               0.01          0.07  \n10 Atlantic Swing       Georgia          0.04               0.0338        0.0738\n# ℹ 41 more rows\n# ℹ 1 more variable: max_local_tax_rate <dbl>\n```\n\n\n:::\n:::\n\n\n\n## Recap: `case_when()`\n\n``` r\ncase_when(\n  x > y  ~ \"x is greater than y\", #<1>\n  x < y  ~ \"x is less than y\",    #<2>\n  .default = \"x is equal to y\"    #<3>  \n)\n```\n\n1.  Value if first condition is `TRUE`\n2.  Value if second condition is `TRUE`\n3.  Value if neither condition is `TRUE`, i.e., default value\n\n## Sales tax in coastal states {.smaller .scrollable}\n\n::: task\nCompare the average state sales tax rates of states on the Pacific Coast, states on the Atlantic Coast, and the rest of the states.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsales_taxes |>\n  group_by(coast) |>\n  summarize(mean_state_tax = mean(state_tax_rate))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  coast    mean_state_tax\n  <chr>             <dbl>\n1 Atlantic         0.0484\n2 Neither          0.0545\n3 Pacific          0.0355\n```\n\n\n:::\n:::\n\n\n\n## Sales tax in US regions {.smaller}\n\n::: question\nSuppose you're tasked with the following:\n\n> Compare the average state sales tax rates of states in various regions (Midwest - 12 states, Northeast - 9 states, South - 16 states, West - 13 states).\n\nHow would you approach this task?\n:::\n\n. . .\n\n-   Create a new variable called `region` with levels `\"Midwest\"`, `\"Northeast\"`, `\"South\"`, and `\"West\"`.\n-   Group by `region`\n-   Summarize to find the mean sales tax in each type of state\n\n## `mutate()` with `case_when()` {.smaller .scrollable}\n\n::: question\nWho feels like filling in the blanks lists of states in each region? Who feels like it's simply too tedious to write out names of all states?\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlist_of_midwest_states <- c(___)\nlist_of_northeast_states <- c(___)\nlist_of_south_states <- c(___)\nlist_of_west_states <- c(___)\n\nsales_taxes <- sales_taxes |>\n  mutate(\n    coast = case_when(\n      state %in% list_of_west_states ~ \"Midwest\",\n      state %in% list_of_northeast_states ~ \"Northeast\",\n      state %in% list_of_south_states ~ \"South\",\n      state %in% list_of_west_states ~ \"West\"\n    )\n  )\n```\n:::\n\n\n\n# Joining data\n\n## Why join? {.smaller}\n\nSuppose we want to answer questions like:\n\n> Is there a relationship between\\\n> - number of QS courses taken\\\n> - having scored a 4 or 5 on the AP stats exam\\\n> - motivation for taking course\\\n> - ...\\\n> and performance in this course?\"\n\n. . .\n\nEach of these would require *join*ing class performance data with an outside data source so we can have all relevant information (columns) in a single data frame.\n\n## Why join? {.smaller}\n\nSuppose we want to answer questions like:\n\n> Compare the average state sales tax rates of states in various regions (Midwest - 12 states, Northeast - 9 states, South - 16 states, West - 13 states).\n\n. . .\n\nThis can also be solved with *join*ing region information with the state-level sales tax data.\n\n## Setup\n\nFor the next few slides...\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- tibble(\n  id = c(1, 2, 3),\n  value_x = c(\"x1\", \"x2\", \"x3\")\n  )\n\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n     id value_x\n  <dbl> <chr>  \n1     1 x1     \n2     2 x2     \n3     3 x3     \n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny <- tibble(\n  id = c(1, 2, 4),\n  value_y = c(\"y1\", \"y2\", \"y4\")\n  )\n\ny\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n     id value_y\n  <dbl> <chr>  \n1     1 y1     \n2     2 y2     \n3     4 y4     \n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n## `left_join()`\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/07/left-join.gif)\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleft_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      <NA>   \n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n## `right_join()`\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/07/right-join.gif)\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nright_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n3     4 <NA>    y4     \n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n## `full_join()`\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/07/full-join.gif)\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      <NA>   \n4     4 <NA>    y4     \n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n## `inner_join()`\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/07/inner-join.gif)\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninner_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n## `semi_join()`\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/07/semi-join.gif)\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsemi_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n     id value_x\n  <dbl> <chr>  \n1     1 x1     \n2     2 x2     \n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n## `anti_join()`\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/07/anti-join.gif)\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanti_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n     id value_x\n  <dbl> <chr>  \n1     3 x3     \n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n## Summary\n\n![](images/07/07-dplyr_joins.svg){fig-align=\"center\"}\n",
    "supporting": [
      "07-joining-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}