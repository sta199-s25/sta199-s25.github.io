---
title: "Grammar of data transformation"
subtitle: "Lecture 3"
date: "2025-01-21"
format: revealjs
auto-stretch: false
---

# Now, where was I?

## Alison Bechdel

::: columns
::: {.column width="50%"}
![](images/03/alison.png){fig-align="center" width="80%"}
:::

::: {.column width="50%"}
![](images/03/fun_home.jpg){fig-align="center" width="80%"}
:::
:::

## The Bechdel Test

::: columns
::: {.column width="72%"}
![](images/03/bechdel.png){fig-align="center"} (*Dykes to Watch Out For* - 1985)
:::

::: {.column width="28%"}
Film passes if...

1.  two female characters;
2.  talk to each other;
3.  about something besides a man.
:::
:::

## Do JZ's favorite movies pass?

|                                         |     |
|-----------------------------------------|-----|
| *Double Indemnity* (1944)               | ü•¥  |
| *Sunset Boulevard* (1950)               | ü•¥  |
| *Sweet Smell of Success* (1957)         | ‚ùå  |
| *One Hundred and One Dalmatians* (1961) | ‚úÖ  |
| *Chinatown* (1974)                      | ‚ùå  |
| *Amadeus* (1984)                        | ‚ùå  |
| *Goodfellas* (1990)                     | ü•¥  |
| *Bram Stoker's Dracula* (1992)          | ‚ùå  |
| *The Lord of the Rings* (2001 - 2003)   | ‚ùå  |
| *Vera Drake* (2004)                     | ‚úÖ  |

## `ae-02-bechdel-dataviz`

::: appex
Go to RStudio, confirm that you're in the `ae` project, and open the document ae-02-bechdel-dataviz`.qmd`.
:::

## Recap: Code cells (aka code chunks) {.smaller}

![](images/03/code-cell.png) . . .

-   Cell `label`s are helpful for describing what the code is doing, for jumping between code cells in the editor, and for troubleshooting

-   `message: false` hides any messages emitted by the code in your rendered document

# Data transformation

## A quick reminder {.smaller}

```{r}
#| include: false
library(tidyverse)
bechdel <- read_csv("data/bechdel.csv")
```

```{r}
bechdel |> # <1>
  filter(roi > 400) |> # <2>
  select(title, roi, budget_2013, gross_2013, year, clean_test) # <3>
```

1.  Start with the `bechdel` data frame
2.  Filter for movies with `roi` greater than 400 (gross is more than 400 times budget)
3.  Select the columns `title`, `roi`, `budget_2013`, `gross_2013`, `year`, and `clean_test`

## The pipe `|>` {.smaller}

The pipe operator passes what comes before it into the function that comes after it as the first argument in that function.

::: columns
::: {.column .fragment width="55%"}
```{r}
sum(1, 2)
```
:::

::: {.column .fragment width="45%"}
```{r}
1 |> 
  sum(2)
```
:::
:::

<br>

::: columns
::: {.column .fragment width="55%"}
```{r}
select(filter(bechdel, roi > 400), title)
```
:::

::: {.column .fragment width="45%"}
```{r}
bechdel |>
  filter(roi > 400) |>
  select(title)
```
:::
:::

## Code style tip {{< fa lightbulb >}} {.smaller}

-   In data transformation pipelines, always use a
    -   space before `|>`
    -   line break after `|>`
    -   indent the next line of code

. . .

-   In data visualization layers, always use a
    -   space before `+`
    -   line break after `+`
    -   indent the next line of code

## The pipe, in action {.smaller}

::: task
Find movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.
:::

. . .

Start with the `bechdel` data frame:

```{r}
bechdel
```

## The pipe, in action {.smaller}

::: task
Find movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.
:::

Filter for rows where `binary` is equal to `"PASS"`:

```{r}
bechdel |>
  filter(binary == "PASS")
```

## The pipe, in action {.smaller}

::: task
Find movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.
:::

Arrange the rows in `desc`ending order of `roi`:

```{r}
bechdel |>
  filter(binary == "PASS") |>
  arrange(desc(roi))
```

## The pipe, in action {.smaller}

::: task
Find movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.
:::

Select columns `title` and `roi`:

```{r}
bechdel |>
  filter(binary == "PASS") |>
  arrange(desc(roi)) |>
  select(title, roi)
```

## In this class, you will...

::: columns
::: {.column width="35%"}
Build cakes (`ggplot`) ![](images/03/cake.jpg)
:::

::: {.column width="65%"}
Stack dolls (pipe `|>`) ![](images/03/matryoshka.jpg)
:::
:::

Master these constructs, and everything will be coming up roses!
